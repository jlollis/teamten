
// Apply the java plugin to add support for Java
apply plugin: 'java'

// Metadata.
group = 'com.teamten'
/// name = 'teamten'
version = '1.0'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    /// compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'commons-io:commons-io:1.4'
    compile 'org.apache.commons:commons-lang3:3.0.1'
    compile 'org.eclipse.jetty:jetty-server:7.1.6.v20100715'
    compile 'org.eclipse.jetty:jetty-servlet:7.1.6.v20100715'
    // Was in our lib tree but apparently not used:
    /// compile 'org.eclipse.jetty:jetty-servlets:7.1.6.v20100715'
    compile 'com.google.guava:guava:13.0.1'
    // Also in our lib tree was iText-5.0.2, apparently not used. 

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

// My task for generating javadocs that are published on github IO pages.
task docs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = file('../docs')
    options {
        links "http://download.oracle.com/javase/6/docs/api"
    }
}

// Add command-line options for compiler. Might not apply to tests.
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// Where to put the jar file when the "uploadArchives" task is run.
uploadArchives {
    repositories {
        flatDir {
            dirs 'repo'
        }
    }
}
