#!/usr/bin/env java_launcher
# vim:ft=java:nospell
# lib:/home/lk/kiln/teamten/java/dist/teamten.jar

// Copyright 2011 Lawrence Kesteloot

import com.teamten.image.ImageUtils;
import com.teamten.math.Complex;
import com.teamten.math.Matrix;
import com.teamten.math.Vector;
import com.teamten.render.Renderer;
import com.teamten.render.Triangle;

import java.awt.image.BufferedImage;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import java.util.zip.GZIPInputStream;

/**
 * Reads a model from a file and renders it.
 */
public class model {
    public static void main(String[] args) throws IOException {
        System.out.printf("%,d%n", Runtime.getRuntime().maxMemory());
        if (args.length == 0) {
            System.err.printf("Usage: %s model.tri.gz%n", model.class.getSimpleName());
            System.exit(1);
        }

        String filename = args[0];
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                    new GZIPInputStream(new FileInputStream(filename))));

        Renderer renderer = new Renderer(1);
        renderer.lookAt(Vector.make(0, 0, 0.3), Vector.make(0, 0, 0));

        String line;
        int triangleCount = 0;
        while ((line = reader.readLine()) != null) {
            String[] fields = line.split(" +");

            renderer.addTriangle(
                    new Triangle(
                        Vector.make(
                            Double.parseDouble(fields[3]),
                            Double.parseDouble(fields[4]),
                            Double.parseDouble(fields[5])),
                        Vector.make(
                            Double.parseDouble(fields[0]),
                            Double.parseDouble(fields[1]),
                            Double.parseDouble(fields[2])),
                        Vector.make(
                            Double.parseDouble(fields[6]),
                            Double.parseDouble(fields[7]),
                            Double.parseDouble(fields[8]))));

            triangleCount++;
            if (triangleCount % 100000 == 0) {
                System.out.printf("Loaded %,d triangles%n", triangleCount);
            }
        }

        BufferedImage image = renderer.render(700, 400);
        ImageUtils.save(image, "out.png");
    }
}
