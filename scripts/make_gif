#!/usr/bin/env java_launcher
# vim:ft=java:nospell
# lib:../dist/teamten.jar

// Copyright 2011 Lawrence Kesteloot

import com.teamten.image.ImageUtils;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.awt.image.BufferedImage;

import java.io.IOException;

import java.util.Arrays;

/**
 * Creates an animated GIF for testing the save routine.
 */
public class make_gif {
    private static final int SCALE = 4;
    private static final Color TANGELO = new Color(249, 77, 0, 255);
    private static final Color SHADOW = new Color(0xEE, 0xEE, 0xEE, 255);

    public static void main(String[] args) throws IOException {
        if (args.length != 6) {
            System.err.println(
                    "Usage: make_gif filename width height frame_count frame_time_ms loop");
            System.exit(-1);
        }

        String filename = args[0];
        int width = Integer.parseInt(args[1]);
        int height = Integer.parseInt(args[2]);
        int frameCount = Integer.parseInt(args[3]);
        int frameTimeMs = Integer.parseInt(args[4]);
        boolean loop = Boolean.parseBoolean(args[5]);

        width *= SCALE;
        height *= SCALE;

        BufferedImage[] images = new BufferedImage[frameCount];

        int horizRadius = width*45/100;
        int vertRadius = width*25/100;

        for (int i = 0; i < images.length; i++) {
            BufferedImage image = ImageUtils.makeWhite(width, height);

            Graphics2D g = ImageUtils.createGraphics(image);

            Stroke stroke = new BasicStroke(2*SCALE);
            g.setStroke(stroke);

            int segmentCount = 30;
            for (int j = 0; j < segmentCount; j++) {
                double t = (j + (float) i/images.length)*Math.PI*2/segmentCount;

                float c = (float) ((j + i*segmentCount/images.length) % segmentCount)/
                    (segmentCount - 1);

                g.setColor(ImageUtils.interpolateColor(TANGELO, Color.WHITE, c));

                int x = width/2 - (int) (horizRadius*Math.cos(t));
                int y = height/2 + (int) (vertRadius*Math.sin(t*2));
                g.drawOval(x - 3*SCALE, y - 3*SCALE, 6*SCALE, 6*SCALE);

                g.setColor(ImageUtils.interpolateColor(SHADOW, Color.WHITE, c));
                y = height/2 + (int) (vertRadius*Math.sin(t)/10) + vertRadius*18/10;
                g.drawOval(x - 3*SCALE, y - 3*SCALE, 6*SCALE, 6*SCALE);
            }

            g.dispose();
            images[i] = ImageUtils.resize(image, width/SCALE, height/SCALE);
        }

        ImageUtils.saveAnimatedGif(Arrays.asList(images), filename, frameTimeMs, loop);
    }
}
